meta(charset="utf-8")
meta(name="X-UA-Compatible", content="IE=edge")
- var pageTitle = page.title || config.title
- var descriptionSource = page.description || page.excerpt || page.content
- var fallbackDescription = config.description ? strip_html(config.description) : 'A Blog Powered By Hexo'
- var description = descriptionSource ? strip_html(descriptionSource).replace(/\s+/g, ' ').substring(0, 160) : fallbackDescription
- var canonicalUrl = full_url_for(page.path || '')
- var ogType = page.layout === 'post' ? 'article' : 'website'
- var siteName = config.title
- var hreflangMap = {}
- if (page.layout === 'post' && page.lang_ref) {
-   const localizedPosts = site.posts.filter(post => post.lang_ref === page.lang_ref);
-   localizedPosts.forEach(post => {
-     const langCode = post.lang || post.language;
-     if (langCode && !hreflangMap[langCode]) {
-       const altPath = post.path || '';
-       const altUrl = altPath ? full_url_for(altPath) : null;
-       if (altUrl) {
-         hreflangMap[langCode] = altUrl;
-       }
-     }
-   });
- }
- var hreflangEntries = Object.keys(hreflangMap).map(langCode => ({ lang: langCode, url: hreflangMap[langCode] })).filter(item => item.url)
meta(name="author", content= theme.author)
title
    block site_title
        = pageTitle
block description
    meta(name="description", content= description)

link(rel="canonical", href= canonicalUrl)
if hreflangEntries.length
    each alternate in hreflangEntries
        link(rel="alternate", hreflang= alternate.lang, href= alternate.url)
    link(rel="alternate", hreflang="x-default", href= canonicalUrl)
meta(property="og:type", content= ogType)
meta(property="og:title", content= pageTitle)
meta(property="og:description", content= description)
meta(property="og:url", content= canonicalUrl)
meta(property="og:site_name", content= siteName)
meta(name="twitter:card", content="summary")
meta(name="twitter:title", content= pageTitle)
meta(name="twitter:description", content= description)

if page.keywords
    meta(name="keywords", content= page.keywords)
else
    meta(name="keywords" content= theme.keywords)

meta(content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0",name="viewport")
meta(content="yes",name="apple-mobile-web-app-capable")
meta(content="black",name="apple-mobile-web-app-status-bar-style")
meta(content="telephone=no",name="format-detection")

meta(name="renderer",content="webkit")
link(rel="stylesheet", href= url_for('css/style.css'))
link(rel="stylesheet", href= url_for('css/blog_basic.css'))
link(rel="stylesheet", href= url_for('css/font-awesome.min.css'))
link(rel="stylesheet", href= url_for('css/typography-override.css'))
link(rel="alternate" type="application/atom+xml" title="ATOM 1.0" href="/atom.xml")
link(rel="shortcut icon" type="image/png" href= url_for('images/favicon.png'))

//- 百度统计
script.
    var _hmt = _hmt || [];
    (function() {
        var hm = document.createElement("script");
        hm.type = 'text/javascript';hm.async = true;
        hm.src = "https://hm.baidu.com/hm.js?542ea8c4a9ce535736e775029b1fad26";
        var s = document.getElementsByTagName("script")[0]; 
        s.parentNode.insertBefore(hm, s);
    })();

//- Global site tag (gtag.js) - Google Analytics
script(async='', src='https://www.googletagmanager.com/gtag/js?id=G-PJKTXDR70K')
script.
    window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
    gtag('js', new Date());
    gtag('config', 'G-PJKTXDR70K');

script(async, crossorigin="anonymous", src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-1946575658110055")
